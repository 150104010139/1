日月 光华   - -   SE 精华区 文章 阅读 
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
   发信人 :   jiachong   ( 甲虫 ) ,   信 区 :   SE 
 标     题 :   [ 转载 ] 1 . 软件工程 的 发展 历史                                       jiachong   
 发信站 :   日月 光华   ( 2003 年 04 月 09 日 12 : 47 : 31   星期三 ) ,   站 内 信件 
 
 【   以下 文字 转载自   SE   讨论区   】 
 【   原文 由   jiachong   所 发表   】 
 软件工程 的 发展 历史 
 
 1 . 世界 上 第一个 计算机 程序员 
 　 　 第一个 写 软件 的 人 是 Ada （ Augusta   Ada   Lovelace ） , 在 1860 年代 她 尝试 为 
 Babbage （ Charles   Babbage ） 的 机械式 计算机 写 软件 。 尽管 他们 的 努力 失败 了 ， 
 但 他们 的 名字 永远 载入 了 计算机 发展 的 史册 。 她 的 父亲 就是 那个 狂热 的 ， 不趋 
 炎附势 的 激进 诗人 和 冒险家 拜伦 。 她 本身 也 是 一个 光彩照人 的 人物 - - 数学 尖子 
 和 某种程度 上 的 赌徒 。 她 最 重要 的 贡献 来自 于 与 发明家 Charles   Babbage 的 合作 
 ， 从而 设计 出 世界 上 首批 大型 计算机 - - Difference   Engine 和 Analytical 
 Engine 。 她 甚至 认为 如果 有 正确 的 指令 ， Babbage 的 机器 可以 用来 作曲 ， 这是 
 一个 多么 疯狂 的 想法 ， 因为 当时 大多数 人 只 把 它 看成 是 一个 机械化 算盘 ， 而 她 
 却 有 渲染 力 和 感召力 来 传播 她 的 思想 。 
 
 2 . 现代 计算机软件 的 出现 
 　 　 20 世纪 50 年代 ， 软件 伴随 着 第一台 电子计算机 的 问世 诞生 了 。 以写 软件 为职 
 业 的 人 也 开始 出现 ， 他们 多 是 经过训练 的 数学家 和 电子 工程师 。 1960 年代 美国 大 
 学里 开始 出现 授予 计算机专业 的 学位 ， 教 人们 写 软件 。 
         在 计算机系统 发展 的 初期 ， 硬件 通常 用来 执行 一个 单一 的 程序 ， 而 这个 程序 
 又 是 为 一个 特定 的 目的 而 编制 的 。 早期 当 通用 硬件 成为 平常 事情 的 时候 ， 软件 的 
 通用性 却是 很 有限 的 。 大多数 软件 是 由 使用 该软件 的 个人 或 机构 研制 的 ， 软件 往 
 往 带有 强烈 的 个人 色彩 。 早期 的 软件开发 也 没有 什么 系统 的 方法 可以 遵循 ， 软件 
 设计 是 在 某个 人 的 头脑 中 完成 的 一个 隐藏 的 过程 。 而且 ， 除了 源代码 往往 没有 软 
 件 说明书 等 文档 。 
 
 3 . 软件 危机 
         从 60 年代 中期 到 70 年代 中期 是 计算机系统 发展 的 第二个 时期 ， 在 这 一时期 软 
 件 开始 作为 一种 产品 被 广泛 使用 ， 出现 了 “ 软件 作坊 ” 专职 应 别人 的 需求 写 软件 。 
 这一 软件开发 的 方法 基本上 仍然 沿用 早期 的 个体化 软件开发 方式 ， 但 软件 的 数量 急 
 剧 膨胀 ， 软件 需求 日趋 复杂 ， 维护 的 难度 越来越 大 ， 开发成本 令人吃惊 地高 ， 而失 
 败 的 软件开发 项目 却 屡见不鲜 。 “ 软件 危机 ” 就 这样 开始 了 ！ 
 　 　 “ 软件 危机 ” 使得 人们 开始 对 软件 及其 特性 进行 更深 一步 的 研究 ， 人们 改变 了 
 早期 对 软件 的 不 正确 看法 。 早期 那些 被 认为 是 优秀 的 程序 常常 很难 被 别人 看 懂 ， 通 
 篇 充满 了 程序 技巧 。 现在 人们 普遍认为 优秀 的 程序 除了 功能 正确 ， 性能 优良 之外 ， 
 还 应该 容易 看 懂 、 容易 使用 、 容易 修改 和 扩充 。 
         1968 年 北大西洋公约组织 的 计算机 科学家 在 联邦德国 召开 的 国际 学术会议 上 第 
 一次 提出 了 “ 软件 危机 ” ( software   crisis ) 这个 名词 。   概括 来说 ， 软件 危机 包含 
 两 方面 问题 ： 一 、 如何 开发软件 ， 以 满足 不断 增长 ， 日趋 复杂 的 需求 ； 二 、 如何 维 
 护 数量 不断 膨胀 的 软件产品 。 
 
 4 . 软件工程 的 提出 
         1968 年 秋季 ， NATO （ 北约 ） 的 科技 委员会 召集 了 近 50 名 一流 的 编程人员 、 计算 
 机 科学家 和 工业界 巨头 ， 讨论 和 制定 摆脱 “ 软件 危机 ” 的 对策 。 在 那次 会议 上 第一 
 次 提出 了 软件工程 （ software   engineering ） 这个 概念 。 
         软件工程 是 一门 研究 如何 用 系统化 、 规范化 、 数量化 等 工程 原则 和 方法 去 进行 
 软件 的 开发 和 维护 的 学科 。 软件工程 包括 两 方面 内容 ： 软件开发 技术 和 软件 项目 管 
 理 。 软件开发 技术 包括 软件开发 方法学 、 软件工具 和 软件工程 环境 。 软件 项目管理 
 包括 软件 度量 、 项目 估算 、 进度 控制 、 人员 组织 、 配置管理 、 项目 计划 等 。 
 
 5 . 传统 软件工程 
         为 迎接 软件 危机 的 挑战 ， 人们 进行 了 不懈 的 努力 。 这些 努力 大致 上 是 沿着 两个 
 方向 同时 进行 的 。 
         一 是从 管理 的 角度 ， 希望 实现 软件开发 过程 的 工程化 。 这方面 最为 著名 的 成果 
 就是 提出 了 大家 都 很 熟悉 的 “ 瀑布 式 ” 生命周期 模型 。 它 是 在 60 年代 末 “ 软件 危机 ” 
 后 出现 的 第一个 生命周期 模型 。 如下 所示 ： 
         分析   →   设计   →   编码   →   测试   →   维护 
 　 　 后来 ， 又 有人 针对 该 模型 的 不足 ， 提出 了 快速 原型 法 、 螺旋 模型 、 喷泉 模型 等 
 对 “ 瀑布 式 ” 生命周期 模型 进行 补充 。 现在 ， 它们 在 软件开发 的 实践 中 被 广泛 采用 。 
 　 　 这方面 的 努力 ， 还 使 人们 认识 到 了 文档 的 标准 以及 开发者 之间 、 开发者 与 用户 
 之间 的 交流 方式 的 重要性 。 一些 重要 文档 格式 的 标准 被 确定 下来 ， 包括 变量 、 符号 
 的 命名 规则 以及 原代码 的 规范 格式 。 
 　 　 软件工程 发展 的 第二个 方向 ， 侧重 与 对 软件开发 过程 中 分析 、 设计 的 方法 的 研 
 究 。 这方面 的 重要 成果 就是 在 70 年代 风靡一时 的 结构化 开发方法 ， 即 PO （ 面向 过程 
 的 开发 或 结构化 方法 ） 以及 结构化 的 分析 、 设计 和 相应 的 测试方法 。 
         软件工程 的 目标 是 研制开发 与 生产 出 具有 良好 的 软件 质量 和 费用 合算 的 产品 。 
 费用 合算 是 指 软件开发 运行 的 整个 开销 能 满足用户要求 的 程度 ， 软件 质量 是 指该 软 
 件 能 满足 明确 的 和 隐含 的 需求 能力 有关 特征 和 特性 的 总和 。 软件 质量 可用 六个 特性 
 来 作 评价 ， 即 功能性 、 可靠性 、 易使用 性 、 效率 、 维护性 、 易 移植性 。 
 
 6 . 现代 软件工程 
         软件 不是 纯 物化 的 东西 ， 其中 包含 着 人 的 因素 ， 于是 就 有 很多 变动 的 东西 ， 不 
 可能 像 理想 的 物质 生产 过程 ， 基于 物理学 等 的 原理 来 做 。 早期 的 软件开发 仅 考虑 人 
 的 因素 ， 传统 的 软件工程 强调 物性 的 规律 ， 现代 软件工程 最 根本 的 就是 人 跟物 的 关 
 系 ， 就是 人 和 机器 （ 工具 、 自动化 ） 在 不同 层次 的 不断 循环 发展 的 关系 。 
         面向对象 的 分析 、 设计 方法 （ OOA 和 OOD ） 的 出现 使 传统 的 开发方法 发生 了 翻天 
 覆地 的 变化 。 随之而来 的 是 面向对象 建模语言 （ 以 UML 为 代表 ） 、 软件 复用 、 基于 组 
 件 的 软件开发 等 新 的 方法 和 领域 。 
         与 之 相应 的 是从 企业 管理 的 角度 提出 的 软件 过程 管理 。 即 关注 于 软件 生存 周期 
 中 所 实施 的 一系列 活动 并 通过 过程 度量 、 过程 评价 和 过程 改进 等 涉及 对 所 建立 的 软 
 件 过程 及其 实例 进行 不断 优化 的 活动 使得 软件 过程 循环往复 、 螺旋 上升 式 地 发展 。 
 其中 最 著名 的 软件 过程 成熟度 模型 是 美国 卡内基 梅隆 大学 软件工程 研究所 （ SEI ） 
 建立 的 CMM （ Capability   Maturity   Model ） ， 即 能力 成熟度 模型 。 此 模型 在 建立 和 
 发展 之初 ， 主要 目的 是 为 大型软件 项目 的 招投标 活动 提供 一种 全面 而 客观 的 评审 依 
 据 ， 而 发展 到 后来 ， 又 同时 被 应用 于 许多 软件 机构 内部 的 过程 改进 活动 中 。 
 
 - - jiachong 整理 
 - - 
 这个 世界 总会 有点 不 公正 
 但是 我们 总能 用心 去 平衡 
 ※ 来源 : ・ 日月 光华   bbs . fudan . edu . cn ・ FROM : [ 甲虫 窝 ] 
 ※   修改 : ・ jiachong   於   03 月 04 日 20 : 48 : 46   修改 本文 ・ [ FROM :   218.79 . 59.90 ] 
 - - 
 ※   转载 : ・ 日月 光华   bbs . fudan . edu . cn ・ [ FROM :   61.170 . 202.109 ] 
 
   
 
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 [ 返回 上 一页 ]   [ 本 讨论区 ]